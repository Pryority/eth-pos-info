import Head from "next/head";
import Image from "next/legacy/image";
import Link from "next/link";
import { ArrowDownIcon, ArrowTopRightOnSquareIcon, MinusCircleIcon, PlusCircleIcon } from "@heroicons/react/24/outline";
// import Nav from "../components/Nav";
import rocketPoolLogo from "../public/rocketpool.png";
import aiEthArt from "../public/aiEthArt.jpeg";
import { RocketPool } from "../components/RocketPool";
import ethStaker from "../public/ethstaker.jpeg";
import stakeIcon from "../public/stake-icon.png";
import mergeBanner from "../public/merge-banner.jpeg";
import { TwitterTweetEmbed } from "react-twitter-embed";
import { useState } from "react";


export default function Home() {
  const [showValidators, setShowValidators] = useState(false);
  const toggleValidators =()=> setShowValidators(!showValidators);
  const [showFinality, setShowFinality] = useState(false);
  const toggleFinality =()=> setShowFinality(!showFinality);
  const [showCryptoSecurity, setCryptoSecurity] = useState(false);
  const toggleCryptoSecurity =()=> setCryptoSecurity(!showCryptoSecurity);
  const [showForkChoice, setShowForkChoice] = useState(false);
  const toggleForkChoice =()=> setShowForkChoice(!showForkChoice);
  const [showPOSSecurity, setPOSSecurity] = useState(false);
  const togglePOSSecurity =()=> setPOSSecurity(!showPOSSecurity);
  return (
    <div className='flex flex-col min-h-screen w-full justify-start items-center p-4 sm:p-6 md:p-8 max-w-5xl md:max-w-6xl'>
      <Head>
        <title>EPOS</title>
        <meta name="description" content="Generated by Nemiwind" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      
      <main className={"flex flex-col space-y-4 w-full items-center"}>
        <div className="flex flex-col w-full items-center md:justify-between">
          <div className="flex flex-col sm:flex-row items-center sm:justify-between w-full font-medium text-xl md:text-3xl">
            <div className="cursor-default uppercase tracking-[-1.62px] bg-clip-text font-bold text-transparent bg-gradient-to-tr from-yellow-500 dark:from-yellow-500 via-orange-600 dark:via-yellow-500 to-orange-700 dark:to-orange-500"><span className="font-bold text-yellow-600 dark:text-yellow-300">E</span>thereum <span className="font-bold text-yellow-600 dark:text-yellow-300">P</span>roof <span className="font-bold text-yellow-600 dark:text-yellow-300">O</span>f <span className="font-bold text-yellow-600 dark:text-yellow-300">S</span>take</div>
            <Link href={"https://twitter.com/search?q=%23stakefromhome&src=typed_query"} className="opacity-50 text-xs sm:text-base md:text-lg hover:opacity-70 transition-all ease-in-out duration-200 z-20">
              #stakefromhome
            </Link>
          </div>
        </div>

        <div className="flex w-full relative">
          <Image src={mergeBanner} className="flex w-full h-full object-cover" alt="A screenshot of an Ethereum Client console during 'The Merge'"/>
        </div>

        <div className={"grid h-full space-y-8 md:space-y-6 leading-[20px] lg:space-y-8 md:text-xl cursor-default items-between dark:text-yellow-50 text-stone-900"}>
          <div className="flex flex-col items-center space-y-4 relative">
            <div className="w-96 h-96 absolute top-0 right-4 opacity-25">
              <Image src={stakeIcon} alt="Rocketpool stake icon" className="object-cover"/>
            </div>
            <span className="z-20">
              <Link href={"https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/"} className="text-yellow-600 dark:text-yellow-100 transition-all ease-in-out hover:text-yellow-500 dark:hover:text-yellow-300 duration-75">Proof of Stake</Link> is a <Link href={"https://ethereum.org/en/developers/docs/consensus-mechanisms/"} className="transition-all ease-in-out hover:text-violet-400 duration-75">consensus protocol</Link> used in <Link href={"https://ethereum.org/en/what-is-ethereum/"} className="transition-all ease-in-out hover:text-blue-400 duration-75">Ethereum</Link> <Link href={"https://ethereum.org/en/upgrades/merge/"} className="transition-all ease-in-out hover:text-orange-400 duration-75">2.0 (ETH2)</Link>. It is different from the <Link href={"https://ethereum.org/en/developers/docs/consensus-mechanisms/pow"} className="transition-all ease-in-out hover:text-stone-400 duration-75">Proof of Work (PoW) protocol</Link>, which you may have heard of before, because <Link href={"https://bitcoin.org/en/"} className="transition-all ease-in-out hover:text-yellow-500 duration-75">Bitcoin</Link> uses <Link href={"https://ethereum.org/en/developers/docs/consensus-mechanisms/pow"} className="transition-all ease-in-out hover:text-stone-400 duration-75">PoW</Link>. With a decentralised <Link href={"https://ethereum.org/en/developers/docs/intro-to-ethereum/#what-is-a-blockchain"} className="transition-all ease-in-out hover:text-lime-500 duration-75">blockchain</Link>, these <Link href={"https://ethereum.org/en/developers/docs/consensus-mechanisms/"} className="transition-all ease-in-out hover:text-violet-400 duration-75">consensus protocols</Link> help keep everyone on the same page, so we all know what transactions have been processed and in what order. This is known as validation.
            </span>
            <span className="z-20">
              <Link href={"https://ethereum.org/en/upgrades/merge/"} className="transition-all ease-in-out hover:text-orange-400 duration-75">ETH2 </Link> currently has a <Link href={"https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/"} className="transition-all ease-in-out hover:text-yellow-500 dark:hover:text-yellow-300 duration-75">Proof of Stake (PoS)</Link> chain called the <Link href={"https://beaconcha.in/"} className="transition-all ease-in-out hover:text-teal-500 dark:hover:text-teal-300 duration-75">Beacon Chain</Link>, <Link href={"https://beaconcha.in/"} className="transition-all ease-in-out hover:text-green-700 dark:hover:text-green-500 duration-75">which is faster, more energy efficient and more decentralised</Link> than <Link href={"https://ethereum.org/en/developers/docs/consensus-mechanisms/pow"} className="transition-all ease-in-out hover:text-stone-400 duration-75">PoW</Link>. {"It's"} <Link href={"https://rocketpool.net/"} className="transition-all ease-in-out hover:text-cyan-600 dark:hover:text-cyan-400 duration-75">powered by users depositing ETH and providing an Ethereum node online 24/7 to perform the required validation</Link>. As a reward for providing the node, the <Link href={"https://beaconcha.in/"} className="transition-all ease-in-out hover:text-teal-500 dark:hover:text-teal-300 duration-75">Beacon Chain</Link> gives node operators additional ETH on top of their deposits. It can be viewed similarly to earning interest in a bank account, with the exception that these rewards are generated in return for helping secure the network.
            </span>
          </div>

          <Link href="https://vitalik.eth.limo/general/2017/12/31/pos_faq.html#what-is-proof-of-stake" className="flex items-center space-x-1 transition-all ease-in-out hover:text-pink-300 duration-75 w-full justify-center md:justify-end">
            <span className="text-[10px] sm:text-sm"><span className="font-medium">{"Vitalik's"}</span> explanation of Proof-Of-Stake (POS)</span>
            <ArrowTopRightOnSquareIcon className="h-4 w-4 font-bold"/>
          </Link>

          <iframe className="rounded border-2 bg-white/60" src="https://dune.com/embeds/991513/1716891/0f7acad0-41b3-4c0f-ba03-ef43aa0b16f2" height="500" width="100%" title="chart 3"/>
          
          <div className="flex flex-col items-center text-center space-y-4 py-40 text-sm md:text-base dark:text-white/50 text-stone-900/50">
            <div className="">Deposit funds to a contract to trustlessly stake and manage your ETH</div>
            <ArrowDownIcon className="h-4 w-4"/>
          </div>

          <div className="py-8 flex flex-col items-center space-y-8">
            <Link href={"https://rocketpool.net"}>
              <Image src={rocketPoolLogo} alt="" objectFit="cover" className="w-full"/>
            </Link>
            <RocketPool/>
          </div>

          <iframe className="rounded border-2 bg-white/60" src="https://dune.com/embeds/609518/1138523/5a23e409-945f-400d-b979-5d8fffb8f732" height="500" width="100%" title="chart 1"/>
          <div className="flex flex-col space-y-8 md:space-x-2 items-center">
            <iframe className="rounded border-2 bg-white/60 backdrop-blur-lg" src="https://dune.com/embeds/991483/1716887/f86ab809-0549-44d0-ae01-f2865e83279d" height="500" width="100%" title="chart 2"/>
          </div>

          <div className="flex w-full justify-center items-center relative">
            <Link href={"https://ethstaker.gitbook.io/ethstaker-knowledge-base/"} className="flex flex-col md:flex-row items-center justify-center space-y-4 md:space-x-8 items-center">
              <div className="p-1 flex bg-clip-border relative border-transparent bg-gradient-to-tr from-blue-500 via-sky-500 to-sky-300 rounded-2xl transition-all ease-in-out duration-200 hover:scale-[1.01] h-fit w-[200px] sm:w-[250px] md:w-[300px] lg:w-[350px]">
                <Image src={ethStaker} alt="" className="rounded-xl absolute top-0 left-0"/>
              </div>
              <div className="text-xs sm:text-lg md:text-3xl w-full justify-center flex items-center space-x-2 font-semibold tracking-tight p-2 bg-black/80 text-sky-300 hover:text-sky-200 rounded-xl md:rounded-2xl border-2 border-slate-300 transition-all ease-in-out duration-200 hover:scale-[1.01]">
                <p className="text-xs sm:text-lg md:text-xl lg:text-2xl">Read the r/EthStaker Staking Guides</p>
                <ArrowTopRightOnSquareIcon className="h-3 w-3 md:h-6 md:w-6 font-bold"/>
              </div>
            </Link>
          </div>

          <div className="grid h-full sm:grid-cols-2 xl:grid-cols-4 space-x-2 items-center justify-center py-8">
            <div className="flex w-full justify-center">
              <TwitterTweetEmbed
                tweetId={"1600939533721567233"}
              />
            </div>
          
            <div className="flex w-full justify-center">
              <TwitterTweetEmbed
                tweetId={"1562769656309436417"}
              />
            </div>

            <div className="flex w-full justify-center">
              <TwitterTweetEmbed
                tweetId={"1597889744821944320"}
              />
            </div>

            <div className="flex w-full justify-center">
              <TwitterTweetEmbed
                tweetId={"1562167460576612355"}
              />
            </div>
          </div>

          <div className="flex flex-col items-center space-y-2">
            <Image src={aiEthArt} alt="Made by @EVMaverick392" className="w-full rounded"/>
            <p className="opacity-75">Made by <Link href={"https://twitter.com/EVMaverick392"} className="transition-all ease-in-out hover:text-blue-600 font-bold duration-75">@EVMaverick392</Link></p>
          </div>
          <section className="flex flex-col items-center space-y-2">
            <article className="flex w-full">
              <div className="flex flex-col space-y-4 bg-slate-400/30 dark:bg-slate-900/30 p-8 rounded-md w-full">
                <div className="flex items-center w-full justify-between">
                  <p className="font-bold w-full text-sky-500 dark:text-yellow-300/70">VALIDATORS</p>
                  <div className={!showValidators ? `${"flex w-full items-center justify-end"}`: "hidden"}>
                    <PlusCircleIcon className="h-8 w-8 text-slate-50 dark:text-slate-600 fill-slate-400/40 dark:fill-black/40 hover:text-slate-300 hover:fill-black/60 transition-all ease-in-out duration-75 cursor-pointer" onClick={toggleValidators}/>
                  </div>
                </div>
                {showValidators ? (
                  <div className="flex flex-col space-y-2">
                    <p>To participate as a validator, a user must deposit 32 ETH into the deposit contract and run three separate pieces of software: an execution client, a consensus client, and a validator. On depositing their ETH, the user joins an activation queue that limits the rate of new validators joining the network. Once activated, validators receive new blocks from peers on the Ethereum network. The transactions delivered in the block are re-executed, and the block signature is checked to ensure the block is valid. The validator then sends a vote (called an attestation) in favor of that block across the network.</p>

                    <p>Whereas under proof-of-work, the timing of blocks is determined by the mining difficulty, in proof-of-stake, the tempo is fixed. Time in proof-of-stake Ethereum is divided into slots (12 seconds) and epochs (32 slots). One validator is randomly selected to be a block proposer in every slot. This validator is responsible for creating a new block and sending it out to other nodes on the network. Also in every slot, a committee of validators is randomly chosen, whose votes are used to determine the validity of the block being proposed.</p>

                    <div className={showValidators ? `${"flex w-full items-center justify-end"}`: "hidden"}>
                      <MinusCircleIcon className="h-8 w-8 text-slate-50 dark:text-slate-600 fill-slate-400/40 dark:fill-black/40 hover:text-slate-300 hover:fill-black/60 transition-all ease-in-out duration-75 cursor-pointer" onClick={toggleValidators}/>
                    </div>

                  </div>) :
                  ("")
                }
              </div>
            </article>
          </section>
          <section className="flex flex-col items-center space-y-2">
            <article className="flex w-full">
              <div className="flex flex-col space-y-4 bg-slate-400/30 dark:bg-slate-900/30 p-8 rounded-md w-full">
                <div className="flex items-center w-full justify-between">
                  <p className="font-bold w-full text-sky-500 dark:text-yellow-300/70">CRYPTO-ECONOMIC SECURITY</p>
                  <div className={!showCryptoSecurity ? `${"flex w-full items-center justify-end"}`: "hidden"}>
                    <PlusCircleIcon className="h-8 w-8 text-slate-50 dark:text-slate-600 fill-slate-400/40 dark:fill-black/40 hover:text-slate-300 hover:fill-black/60 transition-all ease-in-out duration-75 cursor-pointer" onClick={toggleCryptoSecurity}/>
                  </div>
                </div>
                {showCryptoSecurity ? (
                  <div className="flex flex-col space-y-2">
                    <p>{"Running a validator is a commitment. The validator is expected to maintain sufficient hardware and connectivity to participate in block validation and proposal. In return, the validator is paid in ETH (their staked balance increases). On the other hand, participating as a validator also opens new avenues for users to attack the network for personal gain or sabotage. To prevent this, validators miss out on ETH rewards if they fail to participate when called upon, and their existing stake can be destroyed if they behave dishonestly. There are two primary behaviors that can be considered dishonest: proposing multiple blocks in a single slot (equivocating) and submitting contradictory attestations. The amount of ETH slashed depends on how many validators are also being slashed at around the same time. This is known as the \"correlation penalty\", and it can be minor (~1% stake for a single validator slashed on their own) or can result in 100% of the validator's stake getting destroyed (mass slashing event). It is imposed halfway through a forced exit period that begins with an immediate penalty (up to 0.5 ETH) on Day 1, the correlation penalty on Day 18, and finally, ejection from the network on Day 36. They receive minor attestation penalties every day because they are present on the network but not submitting votes. This all means a coordinated attack would be very costly for the attacker."}</p>

                    <div className={showCryptoSecurity ? `${"flex w-full items-center justify-end"}`: "hidden"}>
                      <MinusCircleIcon className="h-8 w-8 text-slate-50 dark:text-slate-600 fill-slate-400/40 dark:fill-black/40 hover:text-slate-300 hover:fill-black/60 transition-all ease-in-out duration-75 cursor-pointer" onClick={toggleCryptoSecurity}/>
                    </div>
                  </div>) :
                  ("")
                }
              </div>
            </article>
          </section>
          <section className="flex flex-col items-center space-y-2">
            <article className="flex w-full">
              <div className="flex flex-col space-y-4 bg-slate-400/30 dark:bg-slate-900/30 p-8 rounded-md w-full">
                <div className="flex items-center w-full justify-between">
                  <p className="font-bold w-full text-sky-500 dark:text-yellow-300/70">FORK CHOICE</p>
                  <div className={!showForkChoice ? `${"flex w-full items-center justify-end"}`: "hidden"}>
                    <PlusCircleIcon className="h-8 w-8 text-slate-50 dark:text-slate-600 fill-slate-400/40 dark:fill-black/40 hover:text-slate-300 hover:fill-black/60 transition-all ease-in-out duration-75 cursor-pointer" onClick={toggleForkChoice}/>
                  </div>
                </div>
                {showForkChoice ? (
                  <div className="flex flex-col space-y-2">
                    <p>{"When the network performs optimally and honestly, there is only ever one new block at the head of the chain, and all validators attest to it. However, it is possible for validators to have different views of the head of the chain due to network latency or because a block proposer has equivocated. Therefore, consensus clients require an algorithm to decide which one to favor. The algorithm used in proof-of-stake Ethereum is called LMD-GHOST, and it works by identifying the fork that has the greatest weight of attestations in its history."}</p>

                    <div className={showForkChoice ? `${"flex w-full items-center justify-end"}`: "hidden"}>
                      <MinusCircleIcon className="h-8 w-8 text-slate-50 dark:text-slate-600 fill-slate-400/40 dark:fill-black/40 hover:text-slate-300 hover:fill-black/60 transition-all ease-in-out duration-75 cursor-pointer" onClick={toggleForkChoice}/>
                    </div>

                  </div>) :
                  ("")
                }
              </div>
            </article>
          </section>
          <section className="flex flex-col items-center space-y-2">
            <article className="flex w-full">
              <div className="flex flex-col space-y-4 bg-slate-400/30 dark:bg-slate-900/30 p-8 rounded-md w-full">
                <div className="flex items-center w-full justify-between">
                  <p className="font-bold w-full text-sky-500 dark:text-yellow-300/70">FINALITY</p>
                  <div className={!showFinality ? `${"flex w-full items-center justify-end"}`: "hidden"}>
                    <PlusCircleIcon className="h-8 w-8 text-slate-50 dark:text-slate-600 fill-slate-400/40 dark:fill-black/40 hover:text-slate-300 hover:fill-black/60 transition-all ease-in-out duration-75 cursor-pointer" onClick={toggleFinality}/>
                  </div>
                </div>
                {showFinality ? (
                  <div className="flex flex-col space-y-2">
                    <p>{"A transaction has \"finality\" in distributed networks when it's part of a block that can't change without a significant amount of ETH getting burned. On proof-of-stake Ethereum, this is managed using \"checkpoint\" blocks. The first block in each epoch is a checkpoint. Validators vote for pairs of checkpoints that it considers to be valid. If a pair of checkpoints attracts votes representing at least two-thirds of the total staked ETH, the checkpoints are upgraded. The more recent of the two (target) becomes \"justified\". The earlier of the two is already justified because it was the \"target\" in the previous epoch. Now it is upgraded to \"finalized\". To revert a finalized block, an attacker would commit to losing at least one-third of the total supply of staked ETH. The exact reason for this is explained in this Ethereum Foundation blog post. Since finality requires a two-thirds majority, an attacker could prevent the network from reaching finality by voting with one-third of the total stake. There is a mechanism to defend against this: the inactivity leak. This activates whenever the chain fails to finalize for more than four epochs. The inactivity leak bleeds away the staked ETH from validators voting against the majority, allowing the majority to regain a two-thirds majority and finalize the chain."}</p>

                    <div className={showFinality ? `${"flex w-full items-center justify-end"}`: "hidden"}>
                      <MinusCircleIcon className="h-8 w-8 text-slate-50 dark:text-slate-600 fill-slate-400/40 dark:fill-black/40 hover:text-slate-300 hover:fill-black/60 transition-all ease-in-out duration-75 cursor-pointer" onClick={toggleFinality}/>
                    </div>

                  </div>) :
                  ("")
                }
              </div>
            </article>
          </section>
          <section className="flex flex-col items-center space-y-2">
            <article className="flex w-full">
              <div className="flex flex-col space-y-4 bg-slate-400/30 dark:bg-slate-900/30 p-8 rounded-md w-full">
                <div className="flex items-center w-full justify-between">
                  <p className="font-bold w-full text-sky-500 dark:text-yellow-300/70">PROOF-OF-STAKE AND SECURITY</p>
                  <div className={!showPOSSecurity ? `${"flex w-full items-center justify-end"}`: "hidden"}>
                    <PlusCircleIcon className="h-8 w-8 text-slate-50 dark:text-slate-600 fill-slate-400/40 dark:fill-black/40 hover:text-slate-300 hover:fill-black/60 transition-all ease-in-out duration-75 cursor-pointer" onClick={togglePOSSecurity}/>
                  </div>
                </div>
                {showPOSSecurity ? (
                  <div className="flex flex-col space-y-2">
                    <p>{"The threat of a 51% attack still exists on proof-of-stake as it does on proof-of-work, but it's even riskier for the attackers. An attacker would need 51% of the staked ETH. They could then use their own attestations to ensure their preferred fork was the one with the most accumulated attestations. The 'weight' of accumulated attestations is what consensus clients use to determine the correct chain, so this attacker would be able to make their fork the canonical one. However, a strength of proof-of-stake over proof-of-work is that the community has flexibility in mounting a counter-attack. For example, the honest validators could decide to keep building on the minority chain and ignore the attacker's fork while encouraging apps, exchanges, and pools to do the same. They could also decide to forcibly remove the attacker from the network and destroy their staked ETH. These are strong economic defenses against a 51% attack."}</p>
                    
                    <p>{"51% attacks are just one flavor of malicious activity. Bad actors could attempt long-range attacks (although the finality gadget neutralizes this attack vector), short range 'reorgs' (although proposer boosting and attestation deadlines mitigate this), bouncing and balancing attacks (also mitigated by proposer boosting, and these attacks have anyway only been demonstrated under idealized network conditions) or avalanche attacks (neutralized by the fork choice algorithms rule of only considering the latest message)."}</p>
                    
                    <p>{"Overall, proof-of-stake, as it is implemented on Ethereum, has been demonstrated to be more economically secure than proof-of-work."}</p>

                    <div className={showPOSSecurity ? `${"flex w-full items-center justify-end"}`: "hidden"}>
                      <MinusCircleIcon className="h-8 w-8 text-slate-50 dark:text-slate-600 fill-slate-400/40 dark:fill-black/40 hover:text-slate-300 hover:fill-black/60 transition-all ease-in-out duration-75 cursor-pointer" onClick={togglePOSSecurity}/>
                    </div>

                  </div>) :
                  ("")
                }
              </div>
            </article>
          </section>
        </div>
      </main>
    </div>
  );
}
